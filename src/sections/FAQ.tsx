"use client"
  ;
import { MinusIcon, PlusIcon } from "lucide-react"
import React, { useState } from 'react'
import clsx from "clsx";
import { motion, AnimatePresence } from "framer-motion";

const items = [
  {
    question: "What is Candid Ai?",
    answer: "Candid Ai is a AI-powered platform that helps you detect and analyze contents ranging from text, images, audio and videos to know if its ai-generated or human made in real-time. It uses advanced algorithms to identify and classify content, making it easy for you to detect and differentiate between AI-generated and human-made content."
  },
  {
    question: "How does Candid Ai work?",
    answer: "Candid Ai uses advanced algorithms to analyze the content and identify patterns and characteristics that are unique to AI-generated content. It can also detect content that has been modified or altered by AI."
  },
  {
    question: "What types of content can Candid Ai detect?",
    answer: "Candid Ai can detect a wide range of content, including photos, text, audios, and vidoes. It can also detect content that has been modified or altered by AI."
  },
  {
    question: "Can Candid Ai detect Videos?",
    answer: "Yes, Candid Ai can detect videos. It can also detect videos generated by AI and can differentiate between different types of videos, whether generated by AI or not."
  },
  {
    question: "Can Candid Ai detect Audios?",
    answer: "Yes, Candid Ai can detect audios. It can also detect audios generated by AI and can differentiate between different types of audios, whether generated by AI or not."
  }
]

const AccordionItem = ({ question, answer }: { question: string, answer: string }) => {
  const [isOpen, setIsOpen] = useState(false)

  return (
    <div className="py-7 border-b border-white/30" onClick={() => setIsOpen(!isOpen)}>
      <div className="flex items-center" onClick={() => setIsOpen(!isOpen)}>
        <span className="flex-1 text-lg font-bold">{question}</span>
        {!isOpen ? <PlusIcon /> : <MinusIcon />}
      </div>
      <AnimatePresence>
        {isOpen && (
          <motion.div
            initial={{ height: 0, opacity: 0 }}
            animate={{ height: "auto", opacity: 1 }}
            exit={{ height: 0, opacity: 0 }}
            transition={{ duration: 0.3 }}
            className="overflow-hidde mt-3"
          >
            {answer}
          </motion.div>
        )}
      </AnimatePresence>
      {/* <motion.div className={clsx("mt-4", { "hidden": !isOpen, "": isOpen })}>
        {answer}
      </motion.div> */}
    </div>
  )
}


const FAQ = () => {
  return (
    <div className="text-white bg-gradient-to-b from-[#5d2cab] to-black py-[72px] md:py-24">
      <div className="container">
        <h2 className="text-center font-bold text-5xl md:text-6xl tracking-tighter">
          Frequently Asked Questions
        </h2>
        <div className="mt-12 max-lg:max-w-[700px] mx-auto">
          {items.map(({ question, answer }) => (
            <AccordionItem key={question} question={question} answer={answer} />
          ))}
        </div>

      </div>
    </div>
  )
}

export default FAQ
